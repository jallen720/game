#pragma once


#include <functional>
#include <glm/glm.hpp>


namespace Game
{


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Data structures
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct Room_Data
{
    glm::vec2 origin;
    glm::vec2 bounds;
};


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Interface
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void generate_floor();
void destroy_floor();
const glm::vec2 & get_spawn_position();
char get_room(int x, int y);
char get_room(const glm::vec3 & position);
const Room_Data & get_room_data(char room);
void iterate_current_floor_rooms(const std::function<void(int, int, char &)> & callback);
int get_floor_size();


} // namespace Game
